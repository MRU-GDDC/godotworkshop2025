[gd_scene load_steps=5 format=3 uid="uid://8k2kj8w303id"]

[ext_resource type="PackedScene" uid="uid://nxly7hr4cofn" path="res://bullet.tscn" id="1_kpjcp"]
[ext_resource type="Texture2D" uid="uid://y87atvx3mdom" path="res://icon.svg" id="1_xhfnw"]

[sub_resource type="GDScript" id="GDScript_xhfnw"]
script/source = "extends CharacterBody2D


const SPEED = 300.0
const JUMP_VELOCITY = -400.0
@export var bullet : PackedScene
@export var health: int

func _physics_process(delta: float) -> void:

	if Input.is_action_just_pressed(\"Fire_Bullet\"):
		var bullets = bullet.instantiate()
		bullets.position = Vector2($Marker2D.global_position.x,$Marker2D.global_position.y )
		get_tree().root.add_child(bullets);

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var direction := Input.get_axis(\"ui_left\", \"ui_right\")
	if direction:
		velocity.x = direction * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)

	move_and_slide()
	
func  take_damage(damage: int):
	health = health - damage
	print(\"health lost\")
	if health <= 0:
		queue_free()
	
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_kpjcp"]
size = Vector2(71.25, 86.8022)

[node name="Player" type="CharacterBody2D"]
script = SubResource("GDScript_xhfnw")
bullet = ExtResource("1_kpjcp")
health = 5

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(1.5, -1.23793)
scale = Vector2(0.8, 0.627586)
shape = SubResource("RectangleShape2D_kpjcp")

[node name="Sprite2D" type="Sprite2D" parent="."]
scale = Vector2(0.51028, 0.434483)
texture = ExtResource("1_xhfnw")

[node name="Marker2D" type="Marker2D" parent="."]
position = Vector2(1, -46)
